name: Java CI with Selenium Grid and Apache Benchmark

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome
        options: >-
          --health-cmd="curl -f http://localhost:4444 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 4444:4444

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java environment
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
      
      # Install chromedriver and set it in the path
      - name: Install Chrome and Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          # Automatically download correct chromedriver version for installed chrome
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver

      # Build the project with Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Run the Spring Boot application in the background
      - name: Run Spring Boot Application
        run: |
          nohup mvn spring-boot:run &
          sleep 20 # give it time to start

      # Run Selenium Tests
      - name: Run Selenium Tests
        run: mvn -Dtest=com.example.loginapp.LoginTest test

      # Run Apache Benchmark (AB) to test the application's performance
      - name: Run Apache Benchmark
        run: |
          sudo apt-get update
          sudo apt-get install -y apache2-utils
          ab -n 1000 -c 10 http://localhost:8080/login

      # Post job cleanup actions
      - name: Stop Application
        run: |
          kill $(lsof -t -i:8080)
